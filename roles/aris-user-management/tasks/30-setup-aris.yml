# Depends on ansible-setup!
---
- name: Ensure aris user exists
  user:
    name=aris
    createhome=yes
    shell=/bin/bash
    state=present

- name: Ensure aris user has sudoers rights
  copy:
    src=aris-sudoers-file
    dest=/etc/sudoers.d/aris
    mode=u=rw,g=r,o=

- name: Ensure aris ownes the ansible repo
  file:
    owner=aris
    group=aris
    dest=/opt/ansible
    recurse=yes

- name: Configure .bashrc for aris user to source /opt/ansible/code/hacking/env-setup
  lineinfile:
    dest=/home/aris/.bashrc
    line='source /opt/ansible/code/hacking/env-setup -q'

- name: Ensure aris app (and config) directory exists
  file:
    path={{ item }}
    state=directory
    owner=aris
    group=aris
    mode=u=rwx,g=rx,o=r
  with_items:
    - /opt/aris/config
    - /opt/aris/code
    - /opt/aris/logs

# FIXME: This is only for testing purposes
- name: Copies dummy Usersfile to aris
  copy:
    src=Usersfile
    dest=/opt/aris/config/Usersfile

- name: Copies private key for git access to server
  copy:
    src=key
    dest=/opt/aris/config/key
    mode=u=r,g=,o=

- name: Checkout the aris ansible repo
  git:
    key_file=/opt/aris/config/key
    accept_hostkey=true
    repo=git@github.com:grekko/htw.aris-secret.git
    dest=/opt/aris/code/ansible
    update=yes
    version=HEAD

- name: Ensure aris ansible repo has the correct owner
  file:
    path=/opt/aris/code/ansible
    owner=aris
    group=aris
    mode=u=rwx,g=rx,o=r

    # name="Aris cron-service: Responsible for automatic user configuration via ansible"

- name: Setup crontab for aris user-management background service
  cron:
    name="Aris service"
    minute=*
    job="/opt/ansible/code/bin/ansible-playbook /opt/aris/code/ansible/playbook.yml -i /opt/aris/code/ansible/inventories/local.ini --tags=aris-cron-service > /opt/aris/logs/ansible.log"
    user=aris
    state=present

# Consider Logging, non-verbose
# Run each 5 minutes the Setup task
# - Improvement idea: Run each minute.. check that the Usersfile has been edited since last run
# - Keept .last-run file
